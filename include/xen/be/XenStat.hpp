/*
 *  Xen Stat wrapper
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Copyright (C) 2016 EPAM Systems Inc.
 */

#ifndef XENBE_XENSTAT_HPP_
#define XENBE_XENSTAT_HPP_

#include <vector>

#include "Exception.hpp"
#include "XenCtrl.hpp"
#include "Log.hpp"

namespace XenBackend {

/***************************************************************************//**
 * Exception generated by XenStat.
 * @ingroup xen
 ******************************************************************************/
class XenStatException : public Exception
{
	using Exception::Exception;
};

/***************************************************************************//**
 * Provides different Xen domains statistics.
 * @ingroup xen
 ******************************************************************************/
class XenStat
{
public:
	XenStat();
	~XenStat();

	/**
	 * Returns running domain ids.
	 */
	std::vector<domid_t> getRunningDoms();

	/**
	 * Returns existing domain ids.
	 */
	std::vector<domid_t> getExistingDoms();

private:

	XenInterface mInterface;
	Log mLog;
};

}

#endif /* XENBE_XENSTAT_HPP_ */
